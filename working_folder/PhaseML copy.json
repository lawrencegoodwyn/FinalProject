{
 "cells": [
  {
   "cell_type": "code",
<<<<<<< Updated upstream
   "execution_count": 1,
=======
   "execution_count": 13,
>>>>>>> Stashed changes
   "id": "694afd81",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>ID</th>\n",
       "      <th>CFS</th>\n",
       "      <th>CFS_Type</th>\n",
       "      <th>Classification</th>\n",
       "      <th>offenseDate</th>\n",
       "      <th>offenseHour</th>\n",
       "      <th>offenseDOW</th>\n",
       "      <th>reportDate</th>\n",
       "      <th>reportHour</th>\n",
       "      <th>reportDOW</th>\n",
       "      <th>...</th>\n",
       "      <th>longitude</th>\n",
       "      <th>location</th>\n",
       "      <th>date</th>\n",
       "      <th>month</th>\n",
       "      <th>day</th>\n",
       "      <th>year</th>\n",
       "      <th>fullDate</th>\n",
       "      <th>DOW</th>\n",
       "      <th>time</th>\n",
       "      <th>moonPhase</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>221009267</td>\n",
       "      <td>Domestic Aggravated Battery</td>\n",
       "      <td>Battery</td>\n",
       "      <td>Person</td>\n",
       "      <td>2021-07-04</td>\n",
       "      <td>21</td>\n",
       "      <td>Sunday</td>\n",
       "      <td>7/4/2021 22:37</td>\n",
       "      <td>22</td>\n",
       "      <td>Sunday</td>\n",
       "      <td>...</td>\n",
       "      <td>-82.326069</td>\n",
       "      <td>POINT (-82.326069 29.688534000000004)</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>221009608</td>\n",
       "      <td>Domestic Aggravated Battery</td>\n",
       "      <td>Battery</td>\n",
       "      <td>Person</td>\n",
       "      <td>2021-07-11</td>\n",
       "      <td>22</td>\n",
       "      <td>Sunday</td>\n",
       "      <td>7/11/2021 22:55</td>\n",
       "      <td>22</td>\n",
       "      <td>Sunday</td>\n",
       "      <td>...</td>\n",
       "      <td>-82.387148</td>\n",
       "      <td>POINT (-82.387148 29.632687000000004)</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>221009391</td>\n",
       "      <td>Domestic Aggravated Battery</td>\n",
       "      <td>Battery</td>\n",
       "      <td>Person</td>\n",
       "      <td>2021-07-07</td>\n",
       "      <td>19</td>\n",
       "      <td>Wednesday</td>\n",
       "      <td>7/7/2021 19:13</td>\n",
       "      <td>19</td>\n",
       "      <td>Wednesday</td>\n",
       "      <td>...</td>\n",
       "      <td>-82.299390</td>\n",
       "      <td>POINT (-82.29939 29.640249)</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>221009308</td>\n",
       "      <td>Domestic Aggravated Battery</td>\n",
       "      <td>Battery</td>\n",
       "      <td>Person</td>\n",
       "      <td>2021-07-06</td>\n",
       "      <td>7</td>\n",
       "      <td>Tuesday</td>\n",
       "      <td>7/6/2021 7:27</td>\n",
       "      <td>7</td>\n",
       "      <td>Tuesday</td>\n",
       "      <td>...</td>\n",
       "      <td>-82.398242</td>\n",
       "      <td>POINT (-82.398242 29.641625)</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>221011388</td>\n",
       "      <td>Domestic Aggravated Battery</td>\n",
       "      <td>Battery</td>\n",
       "      <td>Person</td>\n",
       "      <td>2021-08-16</td>\n",
       "      <td>17</td>\n",
       "      <td>Monday</td>\n",
       "      <td>8/16/2021 17:26</td>\n",
       "      <td>17</td>\n",
       "      <td>Monday</td>\n",
       "      <td>...</td>\n",
       "      <td>-82.326069</td>\n",
       "      <td>POINT (-82.326069 29.688534000000004)</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>44868</th>\n",
       "      <td>219004357</td>\n",
       "      <td>Battery (security Guard/officer Aggravated)</td>\n",
       "      <td>Battery</td>\n",
       "      <td>Person</td>\n",
       "      <td>2019-03-14</td>\n",
       "      <td>22</td>\n",
       "      <td>Thursday</td>\n",
       "      <td>3/15/2019 0:50</td>\n",
       "      <td>0</td>\n",
       "      <td>Friday</td>\n",
       "      <td>...</td>\n",
       "      <td>-82.411597</td>\n",
       "      <td>POINT (-82.411597 29.659699)</td>\n",
       "      <td>14-Mar</td>\n",
       "      <td>3.0</td>\n",
       "      <td>14.0</td>\n",
       "      <td>2019.0</td>\n",
       "      <td>2019-03-14</td>\n",
       "      <td>Thursday</td>\n",
       "      <td>6:27 AM</td>\n",
       "      <td>First Quarter</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>44869</th>\n",
       "      <td>218014815</td>\n",
       "      <td>Criminal Mischief</td>\n",
       "      <td>Other</td>\n",
       "      <td>Property</td>\n",
       "      <td>2018-08-15</td>\n",
       "      <td>12</td>\n",
       "      <td>Wednesday</td>\n",
       "      <td>8/15/2018 13:33</td>\n",
       "      <td>13</td>\n",
       "      <td>Wednesday</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>44870</th>\n",
       "      <td>218019557</td>\n",
       "      <td>Theft Grand - Purse Snatching</td>\n",
       "      <td>Theft</td>\n",
       "      <td>Property</td>\n",
       "      <td>2018-10-23</td>\n",
       "      <td>14</td>\n",
       "      <td>Tuesday</td>\n",
       "      <td>10/23/2018 14:53</td>\n",
       "      <td>14</td>\n",
       "      <td>Tuesday</td>\n",
       "      <td>...</td>\n",
       "      <td>-82.339167</td>\n",
       "      <td>POINT (-82.339167 29.677320999999996)</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>44871</th>\n",
       "      <td>218017216</td>\n",
       "      <td>Falsely Personating Officer</td>\n",
       "      <td>Gov Reg Vio</td>\n",
       "      <td>Government</td>\n",
       "      <td>2018-09-18</td>\n",
       "      <td>21</td>\n",
       "      <td>Tuesday</td>\n",
       "      <td>9/18/2018 22:55</td>\n",
       "      <td>22</td>\n",
       "      <td>Tuesday</td>\n",
       "      <td>...</td>\n",
       "      <td>-82.377955</td>\n",
       "      <td>POINT (-82.377955 29.617822000000004)</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>44872</th>\n",
       "      <td>218011979</td>\n",
       "      <td>Gas Drive Off</td>\n",
       "      <td>Theft</td>\n",
       "      <td>Property</td>\n",
       "      <td>2018-07-01</td>\n",
       "      <td>19</td>\n",
       "      <td>Sunday</td>\n",
       "      <td>7/1/2018 20:03</td>\n",
       "      <td>20</td>\n",
       "      <td>Sunday</td>\n",
       "      <td>...</td>\n",
       "      <td>-82.356193</td>\n",
       "      <td>POINT (-82.356193 29.712461)</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>44873 rows × 24 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "              ID                                          CFS     CFS_Type  \\\n",
       "0      221009267                  Domestic Aggravated Battery      Battery   \n",
       "1      221009608                  Domestic Aggravated Battery      Battery   \n",
       "2      221009391                  Domestic Aggravated Battery      Battery   \n",
       "3      221009308                  Domestic Aggravated Battery      Battery   \n",
       "4      221011388                  Domestic Aggravated Battery      Battery   \n",
       "...          ...                                          ...          ...   \n",
       "44868  219004357  Battery (security Guard/officer Aggravated)      Battery   \n",
       "44869  218014815                            Criminal Mischief        Other   \n",
       "44870  218019557                Theft Grand - Purse Snatching        Theft   \n",
       "44871  218017216                  Falsely Personating Officer  Gov Reg Vio   \n",
       "44872  218011979                                Gas Drive Off        Theft   \n",
       "\n",
       "      Classification offenseDate  offenseHour offenseDOW        reportDate  \\\n",
       "0             Person  2021-07-04           21     Sunday    7/4/2021 22:37   \n",
       "1             Person  2021-07-11           22     Sunday   7/11/2021 22:55   \n",
       "2             Person  2021-07-07           19  Wednesday    7/7/2021 19:13   \n",
       "3             Person  2021-07-06            7    Tuesday     7/6/2021 7:27   \n",
       "4             Person  2021-08-16           17     Monday   8/16/2021 17:26   \n",
       "...              ...         ...          ...        ...               ...   \n",
       "44868         Person  2019-03-14           22   Thursday    3/15/2019 0:50   \n",
       "44869       Property  2018-08-15           12  Wednesday   8/15/2018 13:33   \n",
       "44870       Property  2018-10-23           14    Tuesday  10/23/2018 14:53   \n",
       "44871     Government  2018-09-18           21    Tuesday   9/18/2018 22:55   \n",
       "44872       Property  2018-07-01           19     Sunday    7/1/2018 20:03   \n",
       "\n",
       "       reportHour  reportDOW  ...  longitude  \\\n",
       "0              22     Sunday  ... -82.326069   \n",
       "1              22     Sunday  ... -82.387148   \n",
       "2              19  Wednesday  ... -82.299390   \n",
       "3               7    Tuesday  ... -82.398242   \n",
       "4              17     Monday  ... -82.326069   \n",
       "...           ...        ...  ...        ...   \n",
       "44868           0     Friday  ... -82.411597   \n",
       "44869          13  Wednesday  ...        NaN   \n",
       "44870          14    Tuesday  ... -82.339167   \n",
       "44871          22    Tuesday  ... -82.377955   \n",
       "44872          20     Sunday  ... -82.356193   \n",
       "\n",
       "                                    location   date   month   day    year  \\\n",
       "0      POINT (-82.326069 29.688534000000004)     NaN    NaN   NaN     NaN   \n",
       "1      POINT (-82.387148 29.632687000000004)     NaN    NaN   NaN     NaN   \n",
       "2                POINT (-82.29939 29.640249)     NaN    NaN   NaN     NaN   \n",
       "3               POINT (-82.398242 29.641625)     NaN    NaN   NaN     NaN   \n",
       "4      POINT (-82.326069 29.688534000000004)     NaN    NaN   NaN     NaN   \n",
       "...                                      ...     ...    ...   ...     ...   \n",
       "44868           POINT (-82.411597 29.659699)  14-Mar    3.0  14.0  2019.0   \n",
       "44869                                    NaN     NaN    NaN   NaN     NaN   \n",
       "44870  POINT (-82.339167 29.677320999999996)     NaN    NaN   NaN     NaN   \n",
       "44871  POINT (-82.377955 29.617822000000004)     NaN    NaN   NaN     NaN   \n",
       "44872           POINT (-82.356193 29.712461)     NaN    NaN   NaN     NaN   \n",
       "\n",
       "         fullDate       DOW    time       moonPhase  \n",
       "0             NaN       NaN      NaN            NaN  \n",
       "1             NaN       NaN      NaN            NaN  \n",
       "2             NaN       NaN      NaN            NaN  \n",
       "3             NaN       NaN      NaN            NaN  \n",
       "4             NaN       NaN      NaN            NaN  \n",
       "...           ...       ...      ...            ...  \n",
       "44868  2019-03-14  Thursday  6:27 AM  First Quarter  \n",
       "44869         NaN       NaN      NaN            NaN  \n",
       "44870         NaN       NaN      NaN            NaN  \n",
       "44871         NaN       NaN      NaN            NaN  \n",
       "44872         NaN       NaN      NaN            NaN  \n",
       "\n",
       "[44873 rows x 24 columns]"
      ]
     },
<<<<<<< Updated upstream
     "execution_count": 1,
=======
     "execution_count": 13,
>>>>>>> Stashed changes
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "import warnings\n",
    "warnings.filterwarnings('ignore')\n",
    "import numpy as np\n",
    "import pandas as pd\n",
    "from pathlib import Path\n",
    "from collections import Counter\n",
    "from sklearn.metrics import balanced_accuracy_score\n",
    "from sklearn.metrics import confusion_matrix\n",
    "from imblearn.metrics import classification_report_imbalanced\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "id": "92426367",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>ID</th>\n",
       "      <th>CFS</th>\n",
       "      <th>CFS_Type</th>\n",
       "      <th>Classification</th>\n",
       "      <th>offenseDate</th>\n",
       "      <th>offenseHour</th>\n",
       "      <th>offenseDOW</th>\n",
       "      <th>reportDate</th>\n",
       "      <th>reportHour</th>\n",
       "      <th>reportDOW</th>\n",
       "      <th>...</th>\n",
       "      <th>longitude</th>\n",
       "      <th>location</th>\n",
       "      <th>date</th>\n",
       "      <th>month</th>\n",
       "      <th>day</th>\n",
       "      <th>year</th>\n",
       "      <th>fullDate</th>\n",
       "      <th>DOW</th>\n",
       "      <th>time</th>\n",
       "      <th>moonPhase</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>221009267</td>\n",
       "      <td>Domestic Aggravated Battery</td>\n",
       "      <td>Battery</td>\n",
       "      <td>Person</td>\n",
       "      <td>2021-07-04</td>\n",
       "      <td>21</td>\n",
       "      <td>Sunday</td>\n",
       "      <td>7/4/2021 22:37</td>\n",
       "      <td>22</td>\n",
       "      <td>Sunday</td>\n",
       "      <td>...</td>\n",
       "      <td>-82.326069</td>\n",
       "      <td>POINT (-82.326069 29.688534000000004)</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>221009608</td>\n",
       "      <td>Domestic Aggravated Battery</td>\n",
       "      <td>Battery</td>\n",
       "      <td>Person</td>\n",
       "      <td>2021-07-11</td>\n",
       "      <td>22</td>\n",
       "      <td>Sunday</td>\n",
       "      <td>7/11/2021 22:55</td>\n",
       "      <td>22</td>\n",
       "      <td>Sunday</td>\n",
       "      <td>...</td>\n",
       "      <td>-82.387148</td>\n",
       "      <td>POINT (-82.387148 29.632687000000004)</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>221009391</td>\n",
       "      <td>Domestic Aggravated Battery</td>\n",
       "      <td>Battery</td>\n",
       "      <td>Person</td>\n",
       "      <td>2021-07-07</td>\n",
       "      <td>19</td>\n",
       "      <td>Wednesday</td>\n",
       "      <td>7/7/2021 19:13</td>\n",
       "      <td>19</td>\n",
       "      <td>Wednesday</td>\n",
       "      <td>...</td>\n",
       "      <td>-82.299390</td>\n",
       "      <td>POINT (-82.29939 29.640249)</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>221009308</td>\n",
       "      <td>Domestic Aggravated Battery</td>\n",
       "      <td>Battery</td>\n",
       "      <td>Person</td>\n",
       "      <td>2021-07-06</td>\n",
       "      <td>7</td>\n",
       "      <td>Tuesday</td>\n",
       "      <td>7/6/2021 7:27</td>\n",
       "      <td>7</td>\n",
       "      <td>Tuesday</td>\n",
       "      <td>...</td>\n",
       "      <td>-82.398242</td>\n",
       "      <td>POINT (-82.398242 29.641625)</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>221011388</td>\n",
       "      <td>Domestic Aggravated Battery</td>\n",
       "      <td>Battery</td>\n",
       "      <td>Person</td>\n",
       "      <td>2021-08-16</td>\n",
       "      <td>17</td>\n",
       "      <td>Monday</td>\n",
       "      <td>8/16/2021 17:26</td>\n",
       "      <td>17</td>\n",
       "      <td>Monday</td>\n",
       "      <td>...</td>\n",
       "      <td>-82.326069</td>\n",
       "      <td>POINT (-82.326069 29.688534000000004)</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>5 rows × 24 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "          ID                          CFS CFS_Type Classification offenseDate  \\\n",
       "0  221009267  Domestic Aggravated Battery  Battery         Person  2021-07-04   \n",
       "1  221009608  Domestic Aggravated Battery  Battery         Person  2021-07-11   \n",
       "2  221009391  Domestic Aggravated Battery  Battery         Person  2021-07-07   \n",
       "3  221009308  Domestic Aggravated Battery  Battery         Person  2021-07-06   \n",
       "4  221011388  Domestic Aggravated Battery  Battery         Person  2021-08-16   \n",
       "\n",
       "   offenseHour offenseDOW       reportDate  reportHour  reportDOW  ...  \\\n",
       "0           21     Sunday   7/4/2021 22:37          22     Sunday  ...   \n",
       "1           22     Sunday  7/11/2021 22:55          22     Sunday  ...   \n",
       "2           19  Wednesday   7/7/2021 19:13          19  Wednesday  ...   \n",
       "3            7    Tuesday    7/6/2021 7:27           7    Tuesday  ...   \n",
       "4           17     Monday  8/16/2021 17:26          17     Monday  ...   \n",
       "\n",
       "   longitude                               location date   month  day year  \\\n",
       "0 -82.326069  POINT (-82.326069 29.688534000000004)   NaN    NaN  NaN  NaN   \n",
       "1 -82.387148  POINT (-82.387148 29.632687000000004)   NaN    NaN  NaN  NaN   \n",
       "2 -82.299390            POINT (-82.29939 29.640249)   NaN    NaN  NaN  NaN   \n",
       "3 -82.398242           POINT (-82.398242 29.641625)   NaN    NaN  NaN  NaN   \n",
       "4 -82.326069  POINT (-82.326069 29.688534000000004)   NaN    NaN  NaN  NaN   \n",
       "\n",
       "  fullDate  DOW  time   moonPhase  \n",
       "0      NaN  NaN    NaN        NaN  \n",
       "1      NaN  NaN    NaN        NaN  \n",
       "2      NaN  NaN    NaN        NaN  \n",
       "3      NaN  NaN    NaN        NaN  \n",
       "4      NaN  NaN    NaN        NaN  \n",
       "\n",
       "[5 rows x 24 columns]"
      ]
     },
     "execution_count": 15,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
<<<<<<< Updated upstream
    " # --New CSV w/ moonphases & offensetype\n"
=======
    "# Load the data\n",
    "file_path = Path('TransformGainesville_CrimesALL.csv')\n",
    "df = pd.read_csv(file_path, index_col = 0)\n",
    "\n",
    "\n",
    "df.head()"
>>>>>>> Stashed changes
   ]
  },
  {
   "cell_type": "code",
<<<<<<< Updated upstream
   "execution_count": null,
   "id": "e9ee0eac",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "8378ac3c",
=======
   "execution_count": 78,
   "id": "8e9f4a1d",
>>>>>>> Stashed changes
   "metadata": {},
   "outputs": [
    {
     "ename": "SyntaxError",
     "evalue": "positional argument follows keyword argument (1305586974.py, line 1)",
     "output_type": "error",
     "traceback": [
      "\u001b[0;36m  File \u001b[0;32m\"/var/folders/20/_1fhbgyj0hq969tcxqz5trxr0000gn/T/ipykernel_21512/1305586974.py\"\u001b[0;36m, line \u001b[0;32m1\u001b[0m\n\u001b[0;31m    new_df = pd.df.drop(columns= 'date', 'month', 'year', 'fullDate')\u001b[0m\n\u001b[0m                                        ^\u001b[0m\n\u001b[0;31mSyntaxError\u001b[0m\u001b[0;31m:\u001b[0m positional argument follows keyword argument\n"
     ]
    }
   ],
   "source": [
<<<<<<< Updated upstream
    "# Drop NaNs (probably not necessary)"
=======
    "new_df = pd.df.drop(columns= 'date', 'month', 'year', 'fullDate')"
>>>>>>> Stashed changes
   ]
  },
  {
   "cell_type": "code",
<<<<<<< Updated upstream
   "execution_count": null,
   "id": "5d50d8c5",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "3cf379bc",
=======
   "execution_count": 60,
   "id": "9558d5de",
>>>>>>> Stashed changes
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Theft Petit - Retail                         3519\n",
       "Burglary to Conveyance                       3374\n",
       "Theft Petit - Other                          2321\n",
       "Domestic Simple Battery                      1903\n",
       "Criminal Mischief (misdemeanor)              1901\n",
       "                                             ... \n",
       "Dating Violence False Imprisonment              1\n",
       "Theft Grand -firearm                            1\n",
       "Lewd or Lascivious Exhibition Offender 18       1\n",
       "Overdose                                        1\n",
       "Gas Drive Off                                   1\n",
       "Name: CFS, Length: 189, dtype: int64"
      ]
     },
     "execution_count": 2,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Identify most common attributes\n",
    "crime_types = crimes_df['CFS'].value_counts()\n",
    "crime_types"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "eb0a9650",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Property      25223\n",
       "Person        11705\n",
       "Other          4520\n",
       "Government     3425\n",
       "Name: Classification, dtype: int64"
      ]
     },
     "execution_count": 3,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "crime_cats = crimes_df['Classification'].value_counts()\n",
    "crime_cats"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "dff1df76",
   "metadata": {},
   "outputs": [],
   "source": [
<<<<<<< Updated upstream
    "# Use OneHotEncoder on 'violent' column\n"
=======
    "# Create our features\n",
    "#X =  pd.get_dummies(df, columns=['CFS', 'CFS_Type', 'moonPhase'] \n",
    "\n",
    "# Create our target\n",
    "#y = pd.get_dummies(df, columns = ['Classification', dummy"
>>>>>>> Stashed changes
   ]
  },
  {
   "cell_type": "code",
<<<<<<< Updated upstream
   "execution_count": null,
   "id": "46c922ef",
   "metadata": {},
   "outputs": [],
   "source": [
    "# Merge OneHotEncoder with crimes_df and drop original column "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "id": "11ac939f",
   "metadata": {},
   "outputs": [
    {
     "ename": "AttributeError",
     "evalue": "'list' object has no attribute 'dtypes'",
     "output_type": "error",
     "traceback": [
      "\u001b[0;31m---------------------------------------------------------------------------\u001b[0m",
      "\u001b[0;31mAttributeError\u001b[0m                            Traceback (most recent call last)",
      "\u001b[0;32m/var/folders/20/_1fhbgyj0hq969tcxqz5trxr0000gn/T/ipykernel_14533/2202891461.py\u001b[0m in \u001b[0;36m<module>\u001b[0;34m\u001b[0m\n\u001b[0;32m----> 1\u001b[0;31m \u001b[0mcrimes_df\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mcrimes_df\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mdtypes\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0mcrimes_df\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mdtypes\u001b[0m \u001b[0;34m==\u001b[0m \u001b[0;34m\"object\"\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mindex\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mtolist\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m",
      "\u001b[0;31mAttributeError\u001b[0m: 'list' object has no attribute 'dtypes'"
     ]
    }
   ],
   "source": [
    "# Split our preprocessed data into our features and target arrays\n",
    "y = crimes_df['Violent'].values\n",
    "X = application_df.drop(['Violent'],1).values\n",
    "# Split the preprocessed data into a training and testing dataset\n",
    "X_train, X_test, y_train, y_test = train_test_split(X, y, random_state=78)"
=======
   "execution_count": 66,
   "id": "70a727a2",
   "metadata": {},
   "outputs": [],
   "source": [
    "X = df.drop(columns='Classification')\n",
    "X = pd.get_dummies(X)\n",
    "# Create our target\n",
    "y = df.Classification"
>>>>>>> Stashed changes
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 71,
   "id": "f5e05342",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>ID</th>\n",
       "      <th>offenseHour</th>\n",
       "      <th>reportHour</th>\n",
       "      <th>latitude</th>\n",
       "      <th>longitude</th>\n",
       "      <th>month</th>\n",
       "      <th>day</th>\n",
       "      <th>year</th>\n",
       "      <th>CFS_Affray</th>\n",
       "      <th>CFS_Aircraft Incident</th>\n",
       "      <th>...</th>\n",
       "      <th>time _9:24 PM</th>\n",
       "      <th>time _9:42 PM</th>\n",
       "      <th>time _9:50 AM</th>\n",
       "      <th>time _9:54 AM</th>\n",
       "      <th>time _9:54 PM</th>\n",
       "      <th>time _9:57 PM</th>\n",
       "      <th>moonPhase_First Quarter</th>\n",
       "      <th>moonPhase_Full Moon</th>\n",
       "      <th>moonPhase_New  Moon</th>\n",
       "      <th>moonPhase_Third Quarter</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>221009267</td>\n",
       "      <td>21</td>\n",
       "      <td>22</td>\n",
       "      <td>29.688534</td>\n",
       "      <td>-82.326069</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>221009608</td>\n",
       "      <td>22</td>\n",
       "      <td>22</td>\n",
       "      <td>29.632687</td>\n",
       "      <td>-82.387148</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>221009391</td>\n",
       "      <td>19</td>\n",
       "      <td>19</td>\n",
       "      <td>29.640249</td>\n",
       "      <td>-82.299390</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>221009308</td>\n",
       "      <td>7</td>\n",
       "      <td>7</td>\n",
       "      <td>29.641625</td>\n",
       "      <td>-82.398242</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>221011388</td>\n",
       "      <td>17</td>\n",
       "      <td>17</td>\n",
       "      <td>29.688534</td>\n",
       "      <td>-82.326069</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>221011524</td>\n",
       "      <td>7</td>\n",
       "      <td>8</td>\n",
       "      <td>29.631246</td>\n",
       "      <td>-82.319771</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>221012057</td>\n",
       "      <td>16</td>\n",
       "      <td>16</td>\n",
       "      <td>29.704114</td>\n",
       "      <td>-82.372561</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>221012231</td>\n",
       "      <td>23</td>\n",
       "      <td>0</td>\n",
       "      <td>29.684413</td>\n",
       "      <td>-82.305793</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>221012341</td>\n",
       "      <td>19</td>\n",
       "      <td>19</td>\n",
       "      <td>29.696642</td>\n",
       "      <td>-82.384909</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>221013249</td>\n",
       "      <td>19</td>\n",
       "      <td>19</td>\n",
       "      <td>29.616533</td>\n",
       "      <td>-82.367391</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>10</th>\n",
       "      <td>221014033</td>\n",
       "      <td>16</td>\n",
       "      <td>16</td>\n",
       "      <td>29.620272</td>\n",
       "      <td>-82.372798</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11</th>\n",
       "      <td>221014308</td>\n",
       "      <td>16</td>\n",
       "      <td>16</td>\n",
       "      <td>29.652007</td>\n",
       "      <td>-82.328523</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>12</th>\n",
       "      <td>221014905</td>\n",
       "      <td>14</td>\n",
       "      <td>14</td>\n",
       "      <td>29.636801</td>\n",
       "      <td>-82.384650</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>13</th>\n",
       "      <td>221015541</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>29.679854</td>\n",
       "      <td>-82.288972</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>14</th>\n",
       "      <td>221015627</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>29.650277</td>\n",
       "      <td>-82.325004</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>15</th>\n",
       "      <td>221015394</td>\n",
       "      <td>15</td>\n",
       "      <td>18</td>\n",
       "      <td>29.647048</td>\n",
       "      <td>-82.372476</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>16</th>\n",
       "      <td>221016364</td>\n",
       "      <td>12</td>\n",
       "      <td>17</td>\n",
       "      <td>29.620050</td>\n",
       "      <td>-82.381118</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>17</th>\n",
       "      <td>221016505</td>\n",
       "      <td>15</td>\n",
       "      <td>16</td>\n",
       "      <td>29.666622</td>\n",
       "      <td>-82.330857</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>18</th>\n",
       "      <td>221017434</td>\n",
       "      <td>18</td>\n",
       "      <td>6</td>\n",
       "      <td>29.626953</td>\n",
       "      <td>-82.372611</td>\n",
       "      <td>12.0</td>\n",
       "      <td>4.0</td>\n",
       "      <td>2021.0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>19</th>\n",
       "      <td>221017379</td>\n",
       "      <td>22</td>\n",
       "      <td>1</td>\n",
       "      <td>29.663465</td>\n",
       "      <td>-82.323115</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>20</th>\n",
       "      <td>221017317</td>\n",
       "      <td>18</td>\n",
       "      <td>18</td>\n",
       "      <td>29.631741</td>\n",
       "      <td>-82.318443</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>21</th>\n",
       "      <td>221018378</td>\n",
       "      <td>23</td>\n",
       "      <td>0</td>\n",
       "      <td>29.673867</td>\n",
       "      <td>-82.317390</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>22</th>\n",
       "      <td>219009416</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>29.656903</td>\n",
       "      <td>-82.336076</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>23</th>\n",
       "      <td>220018564</td>\n",
       "      <td>7</td>\n",
       "      <td>9</td>\n",
       "      <td>29.627582</td>\n",
       "      <td>-82.339431</td>\n",
       "      <td>12.0</td>\n",
       "      <td>29.0</td>\n",
       "      <td>2020.0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>24</th>\n",
       "      <td>219021546</td>\n",
       "      <td>9</td>\n",
       "      <td>9</td>\n",
       "      <td>29.665559</td>\n",
       "      <td>-82.310274</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>25</th>\n",
       "      <td>220006659</td>\n",
       "      <td>7</td>\n",
       "      <td>8</td>\n",
       "      <td>29.635071</td>\n",
       "      <td>-82.384615</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>26</th>\n",
       "      <td>220003226</td>\n",
       "      <td>21</td>\n",
       "      <td>21</td>\n",
       "      <td>29.632832</td>\n",
       "      <td>-82.340371</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>27</th>\n",
       "      <td>221005161</td>\n",
       "      <td>3</td>\n",
       "      <td>3</td>\n",
       "      <td>29.688534</td>\n",
       "      <td>-82.326069</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>28</th>\n",
       "      <td>221005746</td>\n",
       "      <td>5</td>\n",
       "      <td>5</td>\n",
       "      <td>29.641625</td>\n",
       "      <td>-82.398242</td>\n",
       "      <td>4.0</td>\n",
       "      <td>26.0</td>\n",
       "      <td>2021.0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>29</th>\n",
       "      <td>220005261</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>29.634198</td>\n",
       "      <td>-82.373635</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>30 rows × 52897 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "           ID  offenseHour  reportHour   latitude  longitude  month   day  \\\n",
       "0   221009267           21          22  29.688534 -82.326069    NaN   NaN   \n",
       "1   221009608           22          22  29.632687 -82.387148    NaN   NaN   \n",
       "2   221009391           19          19  29.640249 -82.299390    NaN   NaN   \n",
       "3   221009308            7           7  29.641625 -82.398242    NaN   NaN   \n",
       "4   221011388           17          17  29.688534 -82.326069    NaN   NaN   \n",
       "5   221011524            7           8  29.631246 -82.319771    NaN   NaN   \n",
       "6   221012057           16          16  29.704114 -82.372561    NaN   NaN   \n",
       "7   221012231           23           0  29.684413 -82.305793    NaN   NaN   \n",
       "8   221012341           19          19  29.696642 -82.384909    NaN   NaN   \n",
       "9   221013249           19          19  29.616533 -82.367391    NaN   NaN   \n",
       "10  221014033           16          16  29.620272 -82.372798    NaN   NaN   \n",
       "11  221014308           16          16  29.652007 -82.328523    NaN   NaN   \n",
       "12  221014905           14          14  29.636801 -82.384650    NaN   NaN   \n",
       "13  221015541            1           1  29.679854 -82.288972    NaN   NaN   \n",
       "14  221015627            2           2  29.650277 -82.325004    NaN   NaN   \n",
       "15  221015394           15          18  29.647048 -82.372476    NaN   NaN   \n",
       "16  221016364           12          17  29.620050 -82.381118    NaN   NaN   \n",
       "17  221016505           15          16  29.666622 -82.330857    NaN   NaN   \n",
       "18  221017434           18           6  29.626953 -82.372611   12.0   4.0   \n",
       "19  221017379           22           1  29.663465 -82.323115    NaN   NaN   \n",
       "20  221017317           18          18  29.631741 -82.318443    NaN   NaN   \n",
       "21  221018378           23           0  29.673867 -82.317390    NaN   NaN   \n",
       "22  219009416            0           0  29.656903 -82.336076    NaN   NaN   \n",
       "23  220018564            7           9  29.627582 -82.339431   12.0  29.0   \n",
       "24  219021546            9           9  29.665559 -82.310274    NaN   NaN   \n",
       "25  220006659            7           8  29.635071 -82.384615    NaN   NaN   \n",
       "26  220003226           21          21  29.632832 -82.340371    NaN   NaN   \n",
       "27  221005161            3           3  29.688534 -82.326069    NaN   NaN   \n",
       "28  221005746            5           5  29.641625 -82.398242    4.0  26.0   \n",
       "29  220005261            0           1  29.634198 -82.373635    NaN   NaN   \n",
       "\n",
       "      year  CFS_Affray  CFS_Aircraft Incident  ...  time _9:24 PM  \\\n",
       "0      NaN           0                      0  ...              0   \n",
       "1      NaN           0                      0  ...              0   \n",
       "2      NaN           0                      0  ...              0   \n",
       "3      NaN           0                      0  ...              0   \n",
       "4      NaN           0                      0  ...              0   \n",
       "5      NaN           0                      0  ...              0   \n",
       "6      NaN           0                      0  ...              0   \n",
       "7      NaN           0                      0  ...              0   \n",
       "8      NaN           0                      0  ...              0   \n",
       "9      NaN           0                      0  ...              0   \n",
       "10     NaN           0                      0  ...              0   \n",
       "11     NaN           0                      0  ...              0   \n",
       "12     NaN           0                      0  ...              0   \n",
       "13     NaN           0                      0  ...              0   \n",
       "14     NaN           0                      0  ...              0   \n",
       "15     NaN           0                      0  ...              0   \n",
       "16     NaN           0                      0  ...              0   \n",
       "17     NaN           0                      0  ...              0   \n",
       "18  2021.0           0                      0  ...              0   \n",
       "19     NaN           0                      0  ...              0   \n",
       "20     NaN           0                      0  ...              0   \n",
       "21     NaN           0                      0  ...              0   \n",
       "22     NaN           0                      0  ...              0   \n",
       "23  2020.0           0                      0  ...              0   \n",
       "24     NaN           0                      0  ...              0   \n",
       "25     NaN           0                      0  ...              0   \n",
       "26     NaN           0                      0  ...              0   \n",
       "27     NaN           0                      0  ...              0   \n",
       "28  2021.0           0                      0  ...              0   \n",
       "29     NaN           0                      0  ...              0   \n",
       "\n",
       "    time _9:42 PM  time _9:50 AM  time _9:54 AM  time _9:54 PM  time _9:57 PM  \\\n",
       "0               0              0              0              0              0   \n",
       "1               0              0              0              0              0   \n",
       "2               0              0              0              0              0   \n",
       "3               0              0              0              0              0   \n",
       "4               0              0              0              0              0   \n",
       "5               0              0              0              0              0   \n",
       "6               0              0              0              0              0   \n",
       "7               0              0              0              0              0   \n",
       "8               0              0              0              0              0   \n",
       "9               0              0              0              0              0   \n",
       "10              0              0              0              0              0   \n",
       "11              0              0              0              0              0   \n",
       "12              0              0              0              0              0   \n",
       "13              0              0              0              0              0   \n",
       "14              0              0              0              0              0   \n",
       "15              0              0              0              0              0   \n",
       "16              0              0              0              0              0   \n",
       "17              0              0              0              0              0   \n",
       "18              0              0              0              0              0   \n",
       "19              0              0              0              0              0   \n",
       "20              0              0              0              0              0   \n",
       "21              0              0              0              0              0   \n",
       "22              0              0              0              0              0   \n",
       "23              0              0              0              0              0   \n",
       "24              0              0              0              0              0   \n",
       "25              0              0              0              0              0   \n",
       "26              0              0              0              0              0   \n",
       "27              0              0              0              0              0   \n",
       "28              0              0              0              0              0   \n",
       "29              0              0              0              0              0   \n",
       "\n",
       "    moonPhase_First Quarter  moonPhase_Full Moon   moonPhase_New  Moon   \\\n",
       "0                         0                     0                     0   \n",
       "1                         0                     0                     0   \n",
       "2                         0                     0                     0   \n",
       "3                         0                     0                     0   \n",
       "4                         0                     0                     0   \n",
       "5                         0                     0                     0   \n",
       "6                         0                     0                     0   \n",
       "7                         0                     0                     0   \n",
       "8                         0                     0                     0   \n",
       "9                         0                     0                     0   \n",
       "10                        0                     0                     0   \n",
       "11                        0                     0                     0   \n",
       "12                        0                     0                     0   \n",
       "13                        0                     0                     0   \n",
       "14                        0                     0                     0   \n",
       "15                        0                     0                     0   \n",
       "16                        0                     0                     0   \n",
       "17                        0                     0                     0   \n",
       "18                        0                     0                     1   \n",
       "19                        0                     0                     0   \n",
       "20                        0                     0                     0   \n",
       "21                        0                     0                     0   \n",
       "22                        0                     0                     0   \n",
       "23                        0                     1                     0   \n",
       "24                        0                     0                     0   \n",
       "25                        0                     0                     0   \n",
       "26                        0                     0                     0   \n",
       "27                        0                     0                     0   \n",
       "28                        0                     1                     0   \n",
       "29                        0                     0                     0   \n",
       "\n",
       "    moonPhase_Third Quarter  \n",
       "0                         0  \n",
       "1                         0  \n",
       "2                         0  \n",
       "3                         0  \n",
       "4                         0  \n",
       "5                         0  \n",
       "6                         0  \n",
       "7                         0  \n",
       "8                         0  \n",
       "9                         0  \n",
       "10                        0  \n",
       "11                        0  \n",
       "12                        0  \n",
       "13                        0  \n",
       "14                        0  \n",
       "15                        0  \n",
       "16                        0  \n",
       "17                        0  \n",
       "18                        0  \n",
       "19                        0  \n",
       "20                        0  \n",
       "21                        0  \n",
       "22                        0  \n",
       "23                        0  \n",
       "24                        0  \n",
       "25                        0  \n",
       "26                        0  \n",
       "27                        0  \n",
       "28                        0  \n",
       "29                        0  \n",
       "\n",
       "[30 rows x 52897 columns]"
      ]
     },
     "execution_count": 71,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "X.head(30)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 56,
   "id": "8378ac3c",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Property      25223\n",
       "Person        11705\n",
       "Other          4520\n",
       "Government     3425\n",
       "Name: Classification, dtype: int64"
      ]
     },
     "execution_count": 56,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "y.value_counts()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 74,
   "id": "45bc0a27",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "ID                  int64\n",
       "CFS                object\n",
       "CFS_Type           object\n",
       "Classification     object\n",
       "offenseDate        object\n",
       "offenseHour         int64\n",
       "offenseDOW         object\n",
       "reportDate         object\n",
       "reportHour          int64\n",
       "reportDOW          object\n",
       "city               object\n",
       "state              object\n",
       "address            object\n",
       "latitude          float64\n",
       "longitude         float64\n",
       "location           object\n",
       "date               object\n",
       "month             float64\n",
       "day               float64\n",
       "year              float64\n",
       "fullDate           object\n",
       "DOW                object\n",
       "time               object\n",
       "moonPhase          object\n",
       "dtype: object"
      ]
     },
     "execution_count": 74,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.dtypes"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 68,
   "id": "943a383c",
   "metadata": {},
   "outputs": [],
   "source": [
    "from sklearn.model_selection import train_test_split\n",
    "X_train, X_test, y_train, y_test = train_test_split(X, y, random_state=1, stratify=y)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 69,
   "id": "f2af1b5c",
   "metadata": {},
   "outputs": [],
   "source": [
    "# Resample the training data with the BalancedRandomForestClassifier\n",
    "from imblearn.ensemble import BalancedRandomForestClassifier\n",
    "brfc = BalancedRandomForestClassifier(n_estimators=100, random_state=1)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 70,
   "id": "5d50d8c5",
   "metadata": {},
   "outputs": [
    {
     "ename": "ValueError",
     "evalue": "Input contains NaN, infinity or a value too large for dtype('float32').",
     "output_type": "error",
     "traceback": [
      "\u001b[0;31m---------------------------------------------------------------------------\u001b[0m",
      "\u001b[0;31mValueError\u001b[0m                                Traceback (most recent call last)",
      "\u001b[0;32m/var/folders/20/_1fhbgyj0hq969tcxqz5trxr0000gn/T/ipykernel_21512/3041772162.py\u001b[0m in \u001b[0;36m<module>\u001b[0;34m\u001b[0m\n\u001b[0;32m----> 1\u001b[0;31m \u001b[0mbrfc\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mfit\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mX_train\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0my_train\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m",
      "\u001b[0;32m~/opt/anaconda3/envs/mlenv/lib/python3.7/site-packages/imblearn/ensemble/_forest.py\u001b[0m in \u001b[0;36mfit\u001b[0;34m(self, X, y, sample_weight)\u001b[0m\n\u001b[1;32m    419\u001b[0m             \u001b[0;32mraise\u001b[0m \u001b[0mValueError\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m\"sparse multilabel-indicator for y is not supported.\"\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    420\u001b[0m         X, y = self._validate_data(\n\u001b[0;32m--> 421\u001b[0;31m             \u001b[0mX\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0my\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mmulti_output\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;32mTrue\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0maccept_sparse\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;34m\"csc\"\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mdtype\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mDTYPE\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    422\u001b[0m         )\n\u001b[1;32m    423\u001b[0m         \u001b[0;32mif\u001b[0m \u001b[0msample_weight\u001b[0m \u001b[0;32mis\u001b[0m \u001b[0;32mnot\u001b[0m \u001b[0;32mNone\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
      "\u001b[0;32m~/opt/anaconda3/envs/mlenv/lib/python3.7/site-packages/sklearn/base.py\u001b[0m in \u001b[0;36m_validate_data\u001b[0;34m(self, X, y, reset, validate_separately, **check_params)\u001b[0m\n\u001b[1;32m    574\u001b[0m                 \u001b[0my\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mcheck_array\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0my\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m**\u001b[0m\u001b[0mcheck_y_params\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    575\u001b[0m             \u001b[0;32melse\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 576\u001b[0;31m                 \u001b[0mX\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0my\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mcheck_X_y\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mX\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0my\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m**\u001b[0m\u001b[0mcheck_params\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    577\u001b[0m             \u001b[0mout\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mX\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0my\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    578\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n",
      "\u001b[0;32m~/opt/anaconda3/envs/mlenv/lib/python3.7/site-packages/sklearn/utils/validation.py\u001b[0m in \u001b[0;36mcheck_X_y\u001b[0;34m(X, y, accept_sparse, accept_large_sparse, dtype, order, copy, force_all_finite, ensure_2d, allow_nd, multi_output, ensure_min_samples, ensure_min_features, y_numeric, estimator)\u001b[0m\n\u001b[1;32m    966\u001b[0m         \u001b[0mensure_min_samples\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mensure_min_samples\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    967\u001b[0m         \u001b[0mensure_min_features\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mensure_min_features\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 968\u001b[0;31m         \u001b[0mestimator\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mestimator\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    969\u001b[0m     )\n\u001b[1;32m    970\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n",
      "\u001b[0;32m~/opt/anaconda3/envs/mlenv/lib/python3.7/site-packages/sklearn/utils/validation.py\u001b[0m in \u001b[0;36mcheck_array\u001b[0;34m(array, accept_sparse, accept_large_sparse, dtype, order, copy, force_all_finite, ensure_2d, allow_nd, ensure_min_samples, ensure_min_features, estimator)\u001b[0m\n\u001b[1;32m    790\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    791\u001b[0m         \u001b[0;32mif\u001b[0m \u001b[0mforce_all_finite\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 792\u001b[0;31m             \u001b[0m_assert_all_finite\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0marray\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mallow_nan\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mforce_all_finite\u001b[0m \u001b[0;34m==\u001b[0m \u001b[0;34m\"allow-nan\"\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    793\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    794\u001b[0m     \u001b[0;32mif\u001b[0m \u001b[0mensure_min_samples\u001b[0m \u001b[0;34m>\u001b[0m \u001b[0;36m0\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
      "\u001b[0;32m~/opt/anaconda3/envs/mlenv/lib/python3.7/site-packages/sklearn/utils/validation.py\u001b[0m in \u001b[0;36m_assert_all_finite\u001b[0;34m(X, allow_nan, msg_dtype)\u001b[0m\n\u001b[1;32m    114\u001b[0m             raise ValueError(\n\u001b[1;32m    115\u001b[0m                 msg_err.format(\n\u001b[0;32m--> 116\u001b[0;31m                     \u001b[0mtype_err\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mmsg_dtype\u001b[0m \u001b[0;32mif\u001b[0m \u001b[0mmsg_dtype\u001b[0m \u001b[0;32mis\u001b[0m \u001b[0;32mnot\u001b[0m \u001b[0;32mNone\u001b[0m \u001b[0;32melse\u001b[0m \u001b[0mX\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mdtype\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    117\u001b[0m                 )\n\u001b[1;32m    118\u001b[0m             )\n",
      "\u001b[0;31mValueError\u001b[0m: Input contains NaN, infinity or a value too large for dtype('float32')."
     ]
    }
   ],
   "source": [
    "brfc.fit(X_train, y_train)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "3cf379bc",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Theft Petit - Retail                         3519\n",
       "Burglary to Conveyance                       3374\n",
       "Theft Petit - Other                          2321\n",
       "Domestic Simple Battery                      1903\n",
       "Criminal Mischief (misdemeanor)              1901\n",
       "                                             ... \n",
       "Dating Violence False Imprisonment              1\n",
       "Theft Grand -firearm                            1\n",
       "Lewd or Lascivious Exhibition Offender 18       1\n",
       "Overdose                                        1\n",
       "Gas Drive Off                                   1\n",
       "Name: CFS, Length: 189, dtype: int64"
      ]
     },
     "execution_count": 2,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Identify most common attributes\n",
    "crime_types = crimes_df['CFS'].value_counts()\n",
    "crime_types"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "eb0a9650",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Property      25223\n",
       "Person        11705\n",
       "Other          4520\n",
       "Government     3425\n",
       "Name: Classification, dtype: int64"
      ]
     },
     "execution_count": 3,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "crime_cats = crimes_df['Classification'].value_counts()\n",
    "crime_cats"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "9dcaa610",
   "metadata": {},
   "outputs": [],
   "source": [
    "# Use OneHotEncoder on 'violent' column\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "412fb2d6",
   "metadata": {},
   "outputs": [],
   "source": [
    "# Merge OneHotEncoder with crimes_df and drop original column "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "id": "11ac939f",
   "metadata": {},
   "outputs": [
    {
     "ename": "KeyError",
     "evalue": "'Violent'",
     "output_type": "error",
     "traceback": [
      "\u001b[0;31m---------------------------------------------------------------------------\u001b[0m",
      "\u001b[0;31mKeyError\u001b[0m                                  Traceback (most recent call last)",
      "\u001b[0;32m~/opt/anaconda3/envs/mlenv/lib/python3.7/site-packages/pandas/core/indexes/base.py\u001b[0m in \u001b[0;36mget_loc\u001b[0;34m(self, key, method, tolerance)\u001b[0m\n\u001b[1;32m   3360\u001b[0m             \u001b[0;32mtry\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 3361\u001b[0;31m                 \u001b[0;32mreturn\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_engine\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mget_loc\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mcasted_key\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   3362\u001b[0m             \u001b[0;32mexcept\u001b[0m \u001b[0mKeyError\u001b[0m \u001b[0;32mas\u001b[0m \u001b[0merr\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
      "\u001b[0;32m~/opt/anaconda3/envs/mlenv/lib/python3.7/site-packages/pandas/_libs/index.pyx\u001b[0m in \u001b[0;36mpandas._libs.index.IndexEngine.get_loc\u001b[0;34m()\u001b[0m\n",
      "\u001b[0;32m~/opt/anaconda3/envs/mlenv/lib/python3.7/site-packages/pandas/_libs/index.pyx\u001b[0m in \u001b[0;36mpandas._libs.index.IndexEngine.get_loc\u001b[0;34m()\u001b[0m\n",
      "\u001b[0;32mpandas/_libs/hashtable_class_helper.pxi\u001b[0m in \u001b[0;36mpandas._libs.hashtable.PyObjectHashTable.get_item\u001b[0;34m()\u001b[0m\n",
      "\u001b[0;32mpandas/_libs/hashtable_class_helper.pxi\u001b[0m in \u001b[0;36mpandas._libs.hashtable.PyObjectHashTable.get_item\u001b[0;34m()\u001b[0m\n",
      "\u001b[0;31mKeyError\u001b[0m: 'Violent'",
      "\nThe above exception was the direct cause of the following exception:\n",
      "\u001b[0;31mKeyError\u001b[0m                                  Traceback (most recent call last)",
      "\u001b[0;32m/var/folders/20/_1fhbgyj0hq969tcxqz5trxr0000gn/T/ipykernel_21512/884161387.py\u001b[0m in \u001b[0;36m<module>\u001b[0;34m\u001b[0m\n\u001b[1;32m      1\u001b[0m \u001b[0;31m# Split our preprocessed data into our features and target arrays\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m----> 2\u001b[0;31m \u001b[0my\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mcrimes_df\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m'Violent'\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mvalues\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m      3\u001b[0m \u001b[0mX\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mapplication_df\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mdrop\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m'Violent'\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;36m1\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mvalues\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      4\u001b[0m \u001b[0;31m# Split the preprocessed data into a training and testing dataset\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      5\u001b[0m \u001b[0mX_train\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mX_test\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0my_train\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0my_test\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mtrain_test_split\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mX\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0my\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mrandom_state\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;36m78\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
      "\u001b[0;32m~/opt/anaconda3/envs/mlenv/lib/python3.7/site-packages/pandas/core/frame.py\u001b[0m in \u001b[0;36m__getitem__\u001b[0;34m(self, key)\u001b[0m\n\u001b[1;32m   3456\u001b[0m             \u001b[0;32mif\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mcolumns\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mnlevels\u001b[0m \u001b[0;34m>\u001b[0m \u001b[0;36m1\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   3457\u001b[0m                 \u001b[0;32mreturn\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_getitem_multilevel\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mkey\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 3458\u001b[0;31m             \u001b[0mindexer\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mcolumns\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mget_loc\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mkey\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   3459\u001b[0m             \u001b[0;32mif\u001b[0m \u001b[0mis_integer\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mindexer\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   3460\u001b[0m                 \u001b[0mindexer\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;34m[\u001b[0m\u001b[0mindexer\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
      "\u001b[0;32m~/opt/anaconda3/envs/mlenv/lib/python3.7/site-packages/pandas/core/indexes/base.py\u001b[0m in \u001b[0;36mget_loc\u001b[0;34m(self, key, method, tolerance)\u001b[0m\n\u001b[1;32m   3361\u001b[0m                 \u001b[0;32mreturn\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_engine\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mget_loc\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mcasted_key\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   3362\u001b[0m             \u001b[0;32mexcept\u001b[0m \u001b[0mKeyError\u001b[0m \u001b[0;32mas\u001b[0m \u001b[0merr\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 3363\u001b[0;31m                 \u001b[0;32mraise\u001b[0m \u001b[0mKeyError\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mkey\u001b[0m\u001b[0;34m)\u001b[0m \u001b[0;32mfrom\u001b[0m \u001b[0merr\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   3364\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   3365\u001b[0m         \u001b[0;32mif\u001b[0m \u001b[0mis_scalar\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mkey\u001b[0m\u001b[0;34m)\u001b[0m \u001b[0;32mand\u001b[0m \u001b[0misna\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mkey\u001b[0m\u001b[0;34m)\u001b[0m \u001b[0;32mand\u001b[0m \u001b[0;32mnot\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mhasnans\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
      "\u001b[0;31mKeyError\u001b[0m: 'Violent'"
     ]
    }
   ],
   "source": [
    "# Split our preprocessed data into our features and target arrays\n",
    "y = crimes_df['Violent'].values\n",
    "X = application_df.drop(['Violent'],1).values\n",
    "# Split the preprocessed data into a training and testing dataset\n",
    "X_train, X_test, y_train, y_test = train_test_split(X, y, random_state=78)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "f1d160b5",
   "metadata": {},
   "outputs": [],
   "source": [
    "# Create a StandardScaler instances\n",
    "scaler = StandardScaler()\n",
    "\n",
    "# Fit the StandardScaler\n",
    "X_scaler = scaler.fit(X_train)\n",
    "\n",
    "# Scale the data\n",
    "X_train_scaled = X_scaler.transform(X_train)\n",
    "X_test_scaled = X_scaler.transform(X_test)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "1f2a8e5e",
   "metadata": {},
   "outputs": [],
   "source": [
    "# Define the model - deep neural net, i.e., the number of input features and hidden nodes for each layer.\n",
    "number_input_features = len(X_train[0])\n",
    "hidden_nodes_layer1 = 80\n",
    "hidden_nodes_layer2 = 30\n",
    "\n",
    "nn = tf.keras.models.Sequential()\n",
    "\n",
    "# First hidden layer\n",
    "nn.add(\n",
    "    tf.keras.layers.Dense(units=hidden_nodes_layer1, input_dim=number_input_features, activation=\"relu\")\n",
    ")\n",
    "\n",
    "\n",
    "\n",
    "# Second hidden layer\n",
    "nn.add(tf.keras.layers.Dense(units=hidden_nodes_layer2, activation=\"relu\"))\n",
    "# Output layer\n",
    "nn.add(tf.keras.layers.Dense(units=1, activation=\"sigmoid\"))\n",
    "\n",
    "# Check the structure of the model\n",
    "nn.summary()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "5767c452",
   "metadata": {},
   "outputs": [],
   "source": [
    "# Compile the model\n",
    "nn.compile(loss=\"binary_crossentropy\", optimizer=\"adam\", metrics=[\"accuracy\"])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "a0973753",
   "metadata": {},
   "outputs": [],
   "source": [
    "# Import checkpoint dependencies\n",
    "import os\n",
    "from tensorflow.keras.callbacks import ModelCheckpoint\n",
    "\n",
    "# Define the checkpoint path and filenames\n",
    "os.makedirs(\"checkpoints/\",exist_ok=True)\n",
    "checkpoint_path = \"checkpoints/weights.{epoch:02d}.hdf5\""
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "013b78f1",
   "metadata": {},
   "outputs": [],
   "source": [
    "# Create a callback that saves the model's weights/ 5 epo\n",
    "cp_callback = ModelCheckpoint(\n",
    "    filepath=checkpoint_path,\n",
    "    verbose=1,\n",
    "    save_weights_only=True,\n",
    "    save_freq='epoch')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "6ceca16b",
   "metadata": {},
   "outputs": [],
   "source": [
    "# Train the model\n",
    "fit_model = nn.fit(X_train,y_train,epochs=100)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "c567a2d3",
   "metadata": {},
   "outputs": [],
   "source": [
    "# Evaluate the model using the test data\n",
    "model_loss, model_accuracy = nn.evaluate(X_test_scaled,y_test,verbose=2)\n",
    "print(f\"Loss: {model_loss}, Accuracy: {model_accuracy}\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "bb63e658",
   "metadata": {},
   "outputs": [],
   "source": [
    "# Export our model to HDF5 file\n",
    "nn.save(\"MoonPhaseML.h5\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "8e2d7067",
   "metadata": {},
   "outputs": [],
   "source": [
    "# \"If the output of the model is classifcation, use regression\" or clustering"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "mlenv",
   "language": "python",
   "name": "mlenv"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.7.11"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
